*** Settings ***
Library  ArchiveLibrary
Library  keywords.py
Library  String
Library  OperatingSystem
Test Setup  Extract Zip File    acceptance.csar    ${CURDIR}${/}output
Suite Teardown   Remove Directory     ${CURDIR}${/}output     recursive=True

*** Test Cases ***
Extract CSAR, generate and compare file digests, check signature exists, check mapping file exists
      File Should Exist    ${CURDIR}${/}output${/}acceptance.mf
      ${csar_files_and_digests} =  read csar     ${CURDIR}${/}output
      ${manifest_files_and_digests} =  create dict of files and hashes    ${CURDIR}${/}output${/}acceptance.mf
      ${file_and_digest_equality} =  compare dicts  ${csar_files_and_digests}    ${manifest_files_and_digests}
      should be equal as integers  ${file_and_digest_equality}     0
      log     'SHA512 digests for all files are equal'
      File Should Exist    ${CURDIR}${/}output${/}acceptance.mf
      ${signature} =    reading manifest for signature   ${CURDIR}${/}output${/}acceptance.mf
      ${length}=  Get Length    ${signature}
      should be true  ${length}>0
      log     'Signature exists'
      File Should Exist   ${CURDIR}${/}output${/}Definitions${/}OtherTemplates${/}scaling_mapping.yaml
      log     'Mapping file exists'
      [Teardown]  Remove Directory     ${CURDIR}${/}output    recursive=True

Extract CSAR generated by Helm 3, generate and compare file digests
      [Setup]  Extract Zip File    acceptance-helm3.csar    ${CURDIR}${/}output-helm3
      File Should Exist    ${CURDIR}${/}output-helm3${/}acceptance.mf
      ${csar_files_and_digests} =  read csar     ${CURDIR}${/}output-helm3
      ${manifest_files_and_digests} =  create dict of files and hashes    ${CURDIR}${/}output-helm3${/}acceptance.mf
      ${file_and_digest_equality} =  compare dicts  ${csar_files_and_digests}    ${manifest_files_and_digests}
      should be equal as integers  ${file_and_digest_equality}     0
      log     'SHA512 digests for all files are equal'
      [Teardown]  Remove Directory     ${CURDIR}${/}output-helm3     recursive=True

Extract CSAR with multiple helm charts, generate and compare file digests
      [Setup]  Extract Zip File    acceptance-multi.csar    ${CURDIR}${/}output-multi
      File Should Exist    ${CURDIR}${/}output-multi${/}acceptance.mf
      ${csar_files_and_digests} =  read csar     ${CURDIR}${/}output-multi
      ${manifest_files_and_digests} =  create dict of files and hashes    ${CURDIR}${/}output-multi${/}acceptance.mf
      ${file_and_digest_equality} =  compare dicts  ${csar_files_and_digests}    ${manifest_files_and_digests}
      should be equal as integers  ${file_and_digest_equality}     0
      log     'SHA512 digests for all files are equal'
      [Teardown]  Remove Directory     ${CURDIR}${/}output-multi     recursive=True

Extract CSAR, verify CSAR signature
    [Setup]  Extract Zip File    acceptance-type2.zip    ${CURDIR}${/}output-type2
    ${exit_code} =    run verification of signature     ${CURDIR}${/}output-type2  ${CURDIR}${/}output-type2${/}acceptance-type2.csar  ${CURDIR}${/}output-type2${/}acceptance-type2.cms  ${CURDIR}${/}output-type2${/}acceptance-type2.cert  ${CURDIR}${/}..${/}resources${/}ca.pem
    should be equal as integers  ${exit_code}     0
    [Teardown]  Remove Directory     ${CURDIR}${/}output-type2     recursive=True

Extract CSAR, verify helmfile csar
    [Setup]  Extract Zip File    acceptance-helmfile.csar    ${CURDIR}${/}acceptance-helmfile
    File Should Exist   ${CURDIR}${/}acceptance-helmfile${/}Files${/}images${/}docker.tar
    File Should Exist   ${CURDIR}${/}acceptance-helmfile${/}Files${/}images.txt
    File Should Not Be Empty    ${CURDIR}${/}acceptance-helmfile${/}Files${/}images.txt
    ${file_size} =    Get File Size    ${CURDIR}${/}acceptance-helmfile${/}Files${/}images${/}docker.tar
    Should Be True    ${file_size} > 0
    [Teardown]  Remove Directory     ${CURDIR}${/}acceptance-helmfile     recursive=True

Extract lightweight CSAR, verify no images
    [Setup]  Extract Zip File    lightweight.csar   ${CURDIR}${/}lightweight
    File Should Not Exist   ${CURDIR}${/}lightweight${/}Files${/}images${/}docker.tar
    File Should Exist   ${CURDIR}${/}lightweight${/}Files${/}images.txt
    File Should Be Empty    ${CURDIR}${/}lightweight${/}Files${/}images.txt
    File Should Exist   ${CURDIR}${/}lightweight${/}Scripts${/}.keep
    [Teardown]  Remove Directory     ${CURDIR}${/}lightweight     recursive=True

Extract lightweight-helmfile CSAR, verify no images
    [Setup]  Extract Zip File    lightweight-helmfile.csar   ${CURDIR}${/}lightweight-helmfile
    File Should Not Exist   ${CURDIR}${/}lightweight-helmfile${/}Files${/}images${/}docker.tar
    File Should Exist   ${CURDIR}${/}lightweight-helmfile${/}Files${/}images.txt
    File Should Be Empty    ${CURDIR}${/}lightweight-helmfile${/}Files${/}images.txt
    [Teardown]  Remove Directory     ${CURDIR}${/}lightweight-helmfile     recursive=True
